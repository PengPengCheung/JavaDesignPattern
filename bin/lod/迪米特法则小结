迪米特法则小结：
1、 简单定义为：只与直接的朋友通信
2、 直接的朋友指的是 存在耦合关系的两个对象就是朋友关系，其中 出现成员变量、方法参数、方法返回值中的类 为直接的朋友，而出现在局部变量中的类则不是直接的朋友。
3、 而耦合关系包括 依赖、关联、组合、聚合、继承、实现
4、 各种关系的区别为：
	依赖，Class A依赖于Class B,则Class B体现为Class A的局部变量，我想用就用，用了就有关系，不用就没关系；

	关联，Class A关联了Class B，则Class B体现为Class A的全局变量，不管你用不用，反正你知道我的存在了，持有了我的引用；

	聚合，Class A由Class B聚合，则Class B体现为Class A的全局变量，Class B对象的创建是可以不用随Class A对象创建而创建了。用了就加强了关系，不用还是我只知道你的存在。
	聚合可以方便的持有多个类的引用，如使用List<>，所以当你发现有List<>等集合是可以使用聚合来表示，比如观察者模式的结构。

	组合，Class A由Class B组成，则Class B体现为Class A的全局变量，并在创建Class A对象的同时必须创建Class Bx的对象，体现最强的关系。
	
5、 也就是说，在一个类方法的内部最好不要出现陌生的类，非朋友关系的陌生类不要作为局部变量出现。